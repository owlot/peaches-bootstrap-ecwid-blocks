<?php
/**
 * Registers the block using the metadata loaded from the `block.json` file.
 * Behind the scenes, it registers also all assets so they can be enqueued
 * through the block editor in the corresponding context.
 *
 * @see https://developer.wordpress.org/reference/functions/register_block_type/
 */

function peaches_bootstrap_ecwid_create_blocks_init() {
	wp_register_block_metadata_collection(
		__DIR__ . '/../dist',
		__DIR__ . '/../dist/blocks-manifest.php'
	);

	// Register all blocks
	register_block_type_from_metadata( __DIR__ . '/../build/ecwid-product' );
	register_block_type_from_metadata( __DIR__ . '/../build/ecwid-category' );
	register_block_type_from_metadata( __DIR__ . '/../build/ecwid-product-detail/' );
	register_block_type_from_metadata( __DIR__ . '/../build/ecwid-product-field/' );
	register_block_type_from_metadata( __DIR__ . '/../build/ecwid-product-add-to-cart/' );
	register_block_type_from_metadata( __DIR__ . '/../build/ecwid-product-images/' );
	register_block_type_from_metadata( __DIR__ . '/../build/ecwid-product-ingredients/' );
}
add_action( 'init', 'peaches_bootstrap_ecwid_create_blocks_init' );

/**
 * AJAX handler to get product data for editor preview
 */
function peaches_get_ecwid_product_data() {
    // Check nonce from various possible field names
    $nonce = false;
    if (isset($_POST['nonce'])) {
        $nonce = $_POST['nonce'];
    } elseif (isset($_POST['_ajax_nonce'])) {
        $nonce = $_POST['_ajax_nonce'];
    } elseif (isset($_POST['security'])) {
        $nonce = $_POST['security'];
    }

    if ($nonce && !wp_verify_nonce($nonce, 'get_ecwid_product_data')) {
        error_log('Nonce verification failed');
        wp_send_json_error('Invalid nonce');
    }

    $product_id = isset($_POST['product_id']) ? intval($_POST['product_id']) : 0;

    if (!$product_id) {
        wp_send_json_error('Product ID is required');
    }

    if (class_exists('Ecwid_Product')) {
        try {
            $product = Ecwid_Product::get_by_id($product_id);

            if ($product) {
                // Convert product object to array for JSON response
                $product_data = array(
                    'id' => $product->id,
                    'name' => $product->name,
                    'thumbnailUrl' => $product->thumbnailUrl,
                    'price' => $product->price,
                    'autogeneratedSlug' => $product->autogeneratedSlug,
                    'attributes' => $product->attributes,
                );

                wp_send_json_success($product_data);
            } else {
                wp_send_json_error('Product not found');
            }
        } catch (Exception $e) {
            wp_send_json_error('Error: ' . $e->getMessage());
        }
    } else {
        wp_send_json_error('Ecwid plugin not available');
    }
}
add_action('wp_ajax_get_ecwid_product_data', 'peaches_get_ecwid_product_data');
add_action('wp_ajax_nopriv_get_ecwid_product_data', 'peaches_get_ecwid_product_data');

/**
 * Enqueue and localize scripts for the product block
 */
function peaches_ecwid_enqueue_admin_scripts() {
    // Get the current screen
    $screen = get_current_screen();

    // Only on block editor
    if ($screen && $screen->is_block_editor) {
        // Ensure our nonce is available globally
        wp_add_inline_script(
            'wp-blocks',
            'window.EcwidGutenbergParams = window.EcwidGutenbergParams || {};
             window.EcwidGutenbergParams.nonce = "' . wp_create_nonce('get_ecwid_product_data') . '";
             window.EcwidGutenbergParams.ajaxUrl = "' . admin_url('admin-ajax.php') . '";
             window.EcwidGutenbergParams.chooseProduct = "' . __('Choose Product', 'ecwid-shopping-cart') . '";
             window.EcwidGutenbergParams.products = {};',
            'before'
        );
    }
}
add_action('admin_enqueue_scripts', 'peaches_ecwid_enqueue_admin_scripts');

/**
 * Enqueue frontend scripts and localize data
 */
function peaches_ecwid_enqueue_frontend_scripts() {
    // Only on frontend
    if (is_admin()) return;

    // Ensure required scripts are enqueued
    wp_enqueue_script('wp-interactivity');

    // Localize script with AJAX data for frontend
    wp_add_inline_script(
        'wp-interactivity',
        'window.EcwidSettings = window.EcwidSettings || {};
         window.EcwidSettings.ajaxUrl = "' . admin_url('admin-ajax.php') . '";
         window.EcwidSettings.ajaxNonce = "' . wp_create_nonce('get_ecwid_product_data') . '";',
        'before'
    );
}
add_action('wp_enqueue_scripts', 'peaches_ecwid_enqueue_frontend_scripts', 5);

/**
 * AJAX handler to get categories for frontend display
 */
function peaches_get_ecwid_categories() {
    // Check nonce from various possible field names
    $nonce = false;
    if (isset($_POST['nonce'])) {
        $nonce = $_POST['nonce'];
    } elseif (isset($_POST['_ajax_nonce'])) {
        $nonce = $_POST['_ajax_nonce'];
    } elseif (isset($_POST['security'])) {
        $nonce = $_POST['security'];
    }

    if ($nonce && !wp_verify_nonce($nonce, 'get_ecwid_categories')) {
        error_log('Nonce verification failed');
        wp_send_json_error('Invalid nonce');
    }

    if (class_exists('Ecwid_Api_V3')) {
        try {
            $api = new Ecwid_Api_V3();
            $categories_result = $api->get_categories(array());

            if ($categories_result && $categories_result->total > 0) {
                $categories_data = array();
                foreach($categories_result->items as $category) {
                    $categories_data[] = array(
                        'id' => $category->id,
                        'name' => $category->name,
                        'thumbnailUrl' => $category->thumbnailUrl,
                    );
                }

                wp_send_json_success($categories_data);
            } else {
                wp_send_json_success(array());
            }
        } catch (Exception $e) {
            wp_send_json_error('Error: ' . $e->getMessage());
        }
    } else {
        wp_send_json_error('Ecwid plugin not available');
    }
}
add_action('wp_ajax_get_ecwid_categories', 'peaches_get_ecwid_categories');
add_action('wp_ajax_nopriv_get_ecwid_categories', 'peaches_get_ecwid_categories');

/**
 * Update script localization for categories
 */
function peaches_ecwid_category_enqueue_scripts() {
    // Only on frontend
    if (is_admin()) return;

    // Ensure required scripts are enqueued
    wp_enqueue_script('wp-interactivity');

    // Localize script with AJAX data for frontend
    wp_add_inline_script(
        'wp-interactivity',
        'window.EcwidSettings = window.EcwidSettings || {};
         window.EcwidSettings.ajaxUrl = "' . admin_url('admin-ajax.php') . '";
         window.EcwidSettings.ajaxNonce = "' . wp_create_nonce('get_ecwid_categories') . '";
         window.EcwidSettings.storePageId = "' . get_option('ecwid_store_page_id') . '";
         window.EcwidSettings.storeUrl = "' . (get_option('ecwid_store_page_id') ? get_permalink(get_option('ecwid_store_page_id')) : home_url()) . '";',
        'before'
    );
}
add_action('wp_enqueue_scripts', 'peaches_ecwid_category_enqueue_scripts', 5);
