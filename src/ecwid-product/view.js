// src/ecwid-product/view.js - Updated version
import { store, getContext } from '@wordpress/interactivity';

const { state } = store( 'peaches-ecwid-product', {
	state: {
		get productData() {
			const context = getContext();
			return context.product;
		},

		get productId() {
			const context = getContext();
			return context.productId;
		},

		get productName() {
			const product = state.productData;
			return product ? product.name : '';
		},

		get productImage() {
			const product = state.productData;
			return product && product.thumbnailUrl ? product.thumbnailUrl : '';
		},

		get productSubtitle() {
			const product = state.productData;
			if ( ! product || ! product.attributes ) {
				return '';
			}

			const subtitleAttribute = product.attributes.find(
				( attr ) => attr.name === 'Ondertitel'
			);

			return (
				subtitleAttribute?.valueTranslated?.nl ||
				subtitleAttribute?.value ||
				''
			);
		},

		get productPrice() {
			const product = state.productData;
			return product && product.price ? `â‚¬ ${ product.price }` : '';
		},

		get productUrl() {
			const product = state.productData;
			if ( ! product ) {
				return '';
			}

			// If the server provided a complete URL, use it
			if ( product.url ) {
				return product.url;
			}

			// Fallback URL generation
			const currentPath = window.location.pathname;
			let langPrefix = '';

			// Detect language from URL path
			const langMatch = currentPath.match( /^\/([a-z]{2})\// );
			if ( langMatch && langMatch[ 1 ] ) {
				langPrefix = `/${ langMatch[ 1 ] }`;
			}

			// Get shop path
			let shopPath = 'shop'; // Default fallback

			// Adjust shop path based on detected language
			if ( langMatch && langMatch[ 1 ] ) {
				const lang = langMatch[ 1 ];
				if ( lang === 'nl' ) {
					shopPath = 'winkel';
				} else if ( lang === 'fr' ) {
					shopPath = 'boutique';
				} else if ( lang === 'de' ) {
					shopPath = 'geschaeft';
				}
			}

			return `${ window.location.origin }${ langPrefix }/${ shopPath }/${ product.autogeneratedSlug }/`;
		},
	},

	actions: {
		navigateToProduct() {
			const url = state.productUrl;
			if ( url ) {
				window.location.href = url;
			}
		},
		addToCart( e ) {
			const context = getContext();
			const productId = state.productId;

			if ( productId ) {
				// Check if Ecwid cart API is available
				if ( typeof Ecwid !== 'undefined' && Ecwid.Cart ) {
					try {
						Ecwid.Cart.addProduct( {
							id: productId,
							quantity: 1,
						} );
					} catch ( error ) {
						console.error( 'Error adding product to cart:', error );
					}
				} else {
					console.error( 'Ecwid Cart API not available' );
				}
			} else {
				console.error( 'Product ID not found' );
			}
		},
	},

	callbacks: {
		*initProduct() {
			const context = getContext();
			const productId = context.productId;

			if ( ! productId ) {
				context.isLoading = false;
				return;
			}

			context.isLoading = true;

			try {
				// Get current language from URL or HTML
				let currentLang = '';
				const langMatch =
					window.location.pathname.match( /^\/([a-z]{2})\// );
				if ( langMatch && langMatch[ 1 ] ) {
					currentLang = langMatch[ 1 ];
				} else {
					const htmlLang = document.documentElement.lang;
					currentLang = htmlLang ? htmlLang.split( '-' )[ 0 ] : '';
				}

				// Determine the AJAX URL and nonce
				let ajaxUrl = '/wp-admin/admin-ajax.php';
				let ajaxNonce = '';

				// Try to get settings from global EcwidSettings variable
				if ( window.EcwidSettings ) {
					ajaxUrl = window.EcwidSettings.ajaxUrl || ajaxUrl;
					ajaxNonce = window.EcwidSettings.ajaxNonce || ajaxNonce;
				}

				// Fetch product data
				const response = yield fetch( ajaxUrl, {
					method: 'POST',
					headers: {
						'Content-Type': 'application/x-www-form-urlencoded',
					},
					body: new URLSearchParams( {
						action: 'get_ecwid_product_data',
						product_id: productId,
						nonce: ajaxNonce,
						lang: currentLang,
					} ),
				} );

				const data = yield response.json();

				if ( data && data.success && data.data ) {
					context.product = data.data;
					context.isLoading = false;
				} else {
					throw new Error(
						'Failed to fetch product data: ' +
							( data?.data || 'Unknown error' )
					);
				}
			} catch ( error ) {
				console.error( 'Error initializing product:', error );
				context.isLoading = false;
			}
		},
	},
} );
