import { store, getContext } from '@wordpress/interactivity';

const { __, _x, _n, _nx } = wp.i18n;

const { state, actions } = store( 'peaches-ecwid-product', {
	state: {
		get productData() {
			const context = getContext();
			return context.product;
		},
		get productId() {
			const context = getContext();
			return context.productId;
		},
		get productName() {
			const product = state.productData;
			return product ? product.name : '';
		},
		get productImage() {
			const product = state.productData;
			return product ? product.thumbnailUrl : '';
		},
		get productSubtitle() {
			const product = state.productData;
			if ( ! product || ! product.attributes ) return '';

			const subtitleAttribute = product.attributes.find(
				( attr ) => attr.name === 'Ondertitel'
			);

			return subtitleAttribute?.valueTranslated?.nl || '';
		},
		get productPrice() {
			const product = state.productData;
			return product ? `â‚¬ ${ product.price }` : '';
		},
		get productUrl() {
			const product = state.productData;
			const siteUrl = window.location.origin;
			return product
				? `${ siteUrl }/winkel/${ product.autogeneratedSlug }/`
				: '';
		},
	},

	actions: {
		*navigateToProduct() {
			const url = state.productUrl;
			if ( url ) {
				window.location.href = url;
			}
		},
	},

	callbacks: {
		*initProduct() {
			const context = getContext();
			const productId = context.productId;

			console.log( 'Initializing product with ID:', productId );
			console.log( 'EcwidSettings available:', !! window.EcwidSettings );
			console.log( 'AJAX URL:', window.EcwidSettings?.ajaxUrl );
			console.log( 'Nonce:', window.EcwidSettings?.ajaxNonce );

			if ( ! productId ) {
				console.log( 'No product ID found' );
				context.isLoading = false;
				return;
			}

			context.isLoading = true;

			try {
				// Try to fetch using WP AJAX first
				const ajaxUrl =
					window.EcwidSettings?.ajaxUrl || '/wp-admin/admin-ajax.php';
				const response = yield fetch( ajaxUrl, {
					method: 'POST',
					headers: {
						'Content-Type': 'application/x-www-form-urlencoded',
					},
					body: new URLSearchParams( {
						action: 'get_ecwid_product_data',
						product_id: productId,
						nonce: window.EcwidSettings?.ajaxNonce || '',
					} ),
				} );

				const data = yield response.json();

				if ( data && data.success && data.data ) {
					context.product = data.data;
					context.isLoading = false;
				} else {
					throw new Error(
						'Failed to fetch product data: ' +
							( data?.data || 'Unknown error' )
					);
				}
			} catch ( error ) {
				console.error( 'Error initializing product:', error );

				// Fallback to Ecwid client API
				try {
					if (
						typeof window.Ecwid !== 'undefined' &&
						window.Ecwid.Product &&
						window.Ecwid.Product.get_by_id
					) {
						const product =
							window.Ecwid.Product.get_by_id( productId );

						if ( product ) {
							context.product = product;
							context.isLoading = false;
							return;
						}
					}
				} catch ( ecwidError ) {
					console.error(
						'Error fetching from Ecwid client API:',
						ecwidError
					);
				}

				context.isLoading = false;
			}
		},
	},
} );
